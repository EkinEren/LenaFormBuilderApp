@model FormBuilder.Models.User

@{
    ViewBag.Title = "Login Page";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <link href="@Url.Content("~/Content/styles/LoginPage.css")" rel="stylesheet" type="text/css" />
    <script src="~/Content/scripts/toggleLogin.js"></script>
</head>
<body class="container-fluid">


    @*Login Form Start*@
    <div class="login-container">
        <h2>Welcome to FormBuilder</h2>
        @using (Html.BeginForm("Login", "User", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "loginform", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <h3><i class="fa fa-sign-in" aria-hidden="true"></i> Sign In</h3>
            <div class="form-group">
                @Html.LabelFor(model => model.UserName, new { @class = "control-label" })
                <i id="username-help" class="fa fa-info-circle"></i>
                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Password, new { @class = "control-label" })
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <button id="submit-button" value="Login" type="submit" class="btn btn-primary btn-block">Sign In</button>
            </div>
            @Html.ValidationSummary(excludePropertyErrors: true)
        }

        <p><i>Don't have an account?</i></p>
        <button type="button" id="loginBtn" class="btn btn-info">Register</button>

    </div>
            @*Login Form End*@

            @*Register Form Start*@
    <div class="register-container" style="display:none">
        <h3>Register</h3>

        @using (Html.BeginForm("Register", "User", new { ReturnUrl = ViewBag.ReturnUrl } , FormMethod.Post, new { id = "signupform", role = "form" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstMidName, "FirstName", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstMidName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstMidName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, "LastName", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EMail, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EMail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EMail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, "Username", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        <input type="submit" value="Register" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
        <div style="margin-right:50px">
            <p><i>Already have an account?</i></p>
            <button type="button" id="registerBtn" class="btn btn-info">Login</button>
        </div>
    </div>
         @*Register Form End*@

</body>
</html>