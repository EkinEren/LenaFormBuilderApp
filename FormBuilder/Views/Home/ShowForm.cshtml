@model FormBuilder.Models.CustomForm

@{
    ViewBag.Title = "ShowForm";
}

@Html.Hidden("id", @ViewContext.RouteData.Values["id"])


<h2>Form Görüntüleme Sayfası</h2>
<div>
    <hr />

    @using (Html.BeginForm())
    {
        var length = Model.Fields.Length;
        @Html.AntiForgeryToken()
        <fieldset id="yourform"><legend>@Html.DisplayName(Model.Name)</legend></fieldset>
        for (var i = 0; i < length; i++)
        {
            if (Model.Fields[i].DataType == "STRING")
            {

                <div class="form-group">
                    <label>@Html.DisplayName(Model.Fields[i].Name)</label>
                    <i id="username-help" class="fa fa-info-circle"></i>
                    @if (Model.Fields[i].Required)
                    {
                        <input type="text" class="form-control" required />
                    }
                    else
                    { <input type="text" class="form-control" required />}

                    @Html.ValidationMessageFor(model => model.Fields[i].DataType, "", new { @class = "text-danger" })
                </div>

            }

            if (Model.Fields[i].DataType == "NUMBER")
            {

                <div class="form-group">
                    <label>@Html.DisplayName(Model.Fields[i].Name)</label>
                    <i id="username-help" class="fa fa-info-circle"></i>
                    @if (Model.Fields[i].Required)
                    {
                        <input type="text" class="form-control" required />
                    }
                    else
                    { <input type="text" class="form-control" required />}

                    @Html.ValidationMessageFor(model => model.Fields[i].DataType, "", new { @class = "text-danger" })
                </div>

            }

        }
        @Html.ValidationSummary(excludePropertyErrors: true)
    }

    <button type="button" class="btn btn-primary" id="save">Kaydet</button>

</div>
