@model FormBuilder.Models.CustomForm

@{
    ViewBag.Title = "ShowForm";
}

@section scripts
{
    <script type="text/javascript" src="@Url.Content("/Content/scripts/generateForm.js")"></script>
}

@Html.Hidden("id", @ViewContext.RouteData.Values["id"])


<h2>Form Görüntüleme Sayfası</h2>
<div>
    <hr />

    @using (Html.BeginForm())
    {
        var length = Model.Fields.Length;
        @Html.AntiForgeryToken()
        for (var i = 0; i < length; i++)
        {
            if (Model.Fields[i].DataType == "STRING")
            {

                <div class="form-group">
                    @Html.LabelFor(model => model.Fields[i].DataType, new { @class = "control-label" })
                    <i id="username-help" class="fa fa-info-circle"></i>
                    @Html.TextBoxFor(model => model.Fields[i].DataType, new { @class = "form-control" })
                    @Html.DisplayName(Model.Fields[i].DataType)
                    @Html.ValidationMessageFor(model => model.Fields[i].DataType, "", new { @class = "text-danger" })
                </div>

            }
            <div class="form-group">
                @Html.LabelFor(model => model.Fields[i].DataType, new { @class = "control-label" })
                <i id="username-help" class="fa fa-info-circle"></i>
                @Html.TextBoxFor(model => model.Fields[i].DataType, new { @class = "form-control" })
                @Html.DisplayName(Model.Fields[i].DataType)
                @Html.ValidationMessageFor(model => model.Fields[i].DataType, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Fields[i].Name, new { @class = "control-label" })
                @Html.TextBoxFor(model => model.Fields[i].Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Fields[i].Name, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Fields[i].Required, new { @class = "control-label" })
                @Html.TextBoxFor(model => model.Fields[i].Required, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Fields[i].Required, "", new { @class = "text-danger" })
            </div>

        }
        @Html.ValidationSummary(excludePropertyErrors: true)
    }

    <p id="theJson"></p>

    <button type="button" class="btn btn-primary" id="preview">Form Oluştur</button>

</div>
